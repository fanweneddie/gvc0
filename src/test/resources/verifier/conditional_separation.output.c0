#use <runtime>
struct _ptr_int;
struct _ptr_int_;

struct _ptr_int
{
  int value;
  int _id;
};

struct _ptr_int_
{
  struct _ptr_int* value;
  int _id;
};

struct _ptr_int* create(struct OwnedFields* _ownedFields, int* _instanceCounter);
struct _ptr_int_* createNested(struct OwnedFields* _ownedFields, int* _instanceCounter);
int get(int* _instanceCounter);
int main();
void test(int x, struct _ptr_int_* y, struct _ptr_int* z, int* _instanceCounter);

struct _ptr_int* create(struct OwnedFields* _ownedFields, int* _instanceCounter)
{
  struct _ptr_int* _ = NULL;
  _ = alloc(struct _ptr_int);
  _->_id = *_instanceCounter;
  *_instanceCounter = *_instanceCounter + 1;
  addStructAcc(_ownedFields, _->_id, 1);
  return _;
}

struct _ptr_int_* createNested(struct OwnedFields* _ownedFields, int* _instanceCounter)
{
  struct _ptr_int_* ptr = NULL;
  struct _ptr_int* _ = NULL;
  ptr = alloc(struct _ptr_int_);
  ptr->_id = *_instanceCounter;
  *_instanceCounter = *_instanceCounter + 1;
  addStructAcc(_ownedFields, ptr->_id, 1);
  _ = create(_ownedFields, _instanceCounter);
  ptr->value = _;
  return ptr;
}

int get(int* _instanceCounter)
{
  return 1;
}

int main()
{
  int v = 0;
  struct _ptr_int_* a = NULL;
  struct _ptr_int* b = NULL;
  struct OwnedFields* _ownedFields = NULL;
  int* _instanceCounter = NULL;
  _instanceCounter = alloc(int);
  _ownedFields = initOwnedFields();
  v = get(_instanceCounter);
  a = createNested(_ownedFields, _instanceCounter);
  b = create(_ownedFields, _instanceCounter);
  assertAcc(_ownedFields, a != NULL ? a->_id : -1, 0, "Field access runtime check failed for struct _ptr_int_.value");
  if (v == 1)
  {
    assertAcc(_ownedFields, b != NULL ? b->_id : -1, 0, "Field access runtime check failed for struct _ptr_int.value");
  }
  assertAcc(_ownedFields, a->value != NULL ? a->value->_id : -1, 0, "Field access runtime check failed for struct _ptr_int.value");
  assert(!(a->value == NULL));
  if (v == 1)
  {
    assert(!(b == NULL));
  }
  test(v, a, b, _instanceCounter);
  return 0;
}

void test(int x, struct _ptr_int_* y, struct _ptr_int* z, int* _instanceCounter)
{
}
